@{
    Layout = "_Layout";
    ViewData["Title"] = "Panier";
    
    // Debug: Afficher le contenu du ViewBag
    var panierDebug = Context.Session.GetString("Panier");
    System.Diagnostics.Debug.WriteLine($"Contenu du panier dans la vue: {panierDebug}");
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Votre Panier</h2>
        <a href="/" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Continuer les achats
        </a>
    </div>

    @if (ViewBag.Items != null && ViewBag.Items.Count > 0)
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Produit</th>
                        <th>Prix</th>
                        <th>Quantité</th>
                        <th>Total</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.Items)
                    {
                        <tr>
                            <td>@item["Nom"].GetString()</td>
                            <td>@item["Prix"].GetDecimal().ToString("C")</td>
                            <td>
                                <div class="input-group" style="max-width: 150px;">
                                    <button class="btn btn-outline-secondary" type="button" onclick="modifierQuantite(@item["ProduitId"].GetInt32(), -1)">-</button>
                                    <input type="text" class="form-control text-center" value="@item["Quantite"].GetInt32()" readonly>
                                    <button class="btn btn-outline-secondary" type="button" onclick="modifierQuantite(@item["ProduitId"].GetInt32(), 1)">+</button>
                                </div>
                            </td>
                            <td>@((item["Prix"].GetDecimal() * item["Quantite"].GetInt32()).ToString("C"))</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="supprimerDuPanier(@item["ProduitId"].GetInt32())">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Total</strong></td>
                        <td><strong>@ViewBag.Total.ToString("C")</strong></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-end mt-4">
            <form id="passerCommandeForm" method="post">
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-credit-card"></i> Procéder au paiement
                </button>
            </form>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            Votre panier est vide.  
        </div>
    }
</div>

@section Scripts {
    <script>
        function modifierQuantite(produitId, delta) {
            fetch('/GestionDuCompte/ModifierQuantite', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ produitId: produitId, delta: delta })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                alert('Une erreur est survenue lors de la modification de la quantité');
            });
        }

        function supprimerDuPanier(produitId) {
            if (confirm('Êtes-vous sûr de vouloir supprimer cet article du panier ?')) {
                fetch('/GestionDuCompte/SupprimerDuPanier', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ produitId: produitId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    alert('Une erreur est survenue lors de la suppression du produit');
                });
            }
        }

        // Gérer la soumission du formulaire de commande
        document.getElementById('passerCommandeForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            fetch('/GestionDuCompte/PasserCommande', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Redirection vers la page de paiement
                    window.location.href = data.redirectTo;
                } else {
                    // Afficher le message d'erreur
                    alert(data.message);
                    // Si une redirection est spécifiée, rediriger
                    if (data.redirectTo) {
                        window.location.href = data.redirectTo;
                    }
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                alert('Une erreur est survenue lors du traitement de votre commande');
            });
        });
    </script>
} 